## Database
[Database]
# Database driver
# String
sc.database.driver=com.mysql.jdbc.Driver

# Database name
# String
sc.database.name=smartscore_development

# Database URL
# String
sc.database.url=jdbc:mysql://127.0.0.1:3306/smartscore_development

# Database user
# String
sc.database.user=smartscore

# Database password
# String
sc.database.password=smartscore

# Connection pool acquire increment
# Integer
sc.database.pool.acquireincrement=5

# Connection pool connection tracking
# Boolean
sc.database.pool.connectiontracking=true

# Connection pool statements cache size
# Integer
sc.database.pool.statementscachesize=1

# Connection pool min connections per partition
# Integer
sc.database.pool.minconnectionsperpartition=1

# Connection pool max connections per partition
# Integer
sc.database.pool.maxconnectionsperpartition=50

# Connection pool partition count
# Integer
sc.database.pool.partitioncount=2

# Content of task parameters in `task` table
# String
sc.database.task.content_column_name=param

## Redis
[Redis]

# Redis server host
# String
sc.redis.host=127.0.0.1

# Redis server port
# Integer
sc.redis.port=6379

# Redis channel
# String
sc.redis.channel=smartscore-taskqueue

## Mail
[Mail]

# Mail protocol
# String
sc.mail.protocol=smtps

# Mail host
# String
sc.mail.host=smtp.163.com

# Mail port
# Integer
sc.mail.port=465

# Mail username
# String
sc.mail.username=smart_score@163.com

# Mail password
# String
sc.mail.password=smartscoreecnu

# Mail subject
# String
sc.mail.subject=Smartscore Task Result

# Mail from
# String
sc.mail.from=Smartscore <smart_score@163.com>

# Mail cc
# String
sc.mail.cc=smart_score@163.com

# Mail bcc
# String
sc.mail.bcc=dlangu0393@gmail.com

## Data
[Data]

# Data input path
# String
sc.data.path.input=/Users/microdog/git/smartscore-mahout/input

# Data output path
# String
sc.data.path.output=/Users/microdog/git/smartscore-mahout/output

## Task
[Task]
# Log
sc.task.log_path=/opt/java/log
# Type
sc.task.types=clustering,classification,recommendation

# Model
sc.task.types.clustering.models=kmeans,fuzzy_kmeans
sc.task.types.classification.models=svm,me,rf
sc.task.types.regression.models=lr
sc.task.types.sorting.models=gbdt,gbrank,ranksvm
sc.task.types.recommendation.models=als,cf

# Clustering
sc.task.clustering.kmeans=ls
sc.task.clustering.fuzzy_kmeans=ls

# Classification
sc.task.classification.svm=hadoop -jar
sc.task.classification.me=hadoop -jar
sc.task.classification.rf=hadoop -jar

# Regression
sc.task.regression.lr=hadoop -jar

# Sorting
sc.task.sorting.gbdt=hadoop -jar
sc.task.sorting.gbrank=hadoop -jar
sc.task.sorting.ranksvm=hadoop -jar

# Recommendation
sc.task.recommendation.als=hadoop -jar
sc.task.recommendation.cf=hadoop -jar

# Hadoop config
hadoop.home=/opt/hadoop
hadoop.bin=/opt/hadoop/bin
hadoop.conf.dir=/opt/hadoop/etc/hadoop
